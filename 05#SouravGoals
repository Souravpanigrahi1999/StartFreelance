my first commit.
1.first to open the file and edit.
2.save the file and open the cmd.
3.git status
4.git add .
5.git commit -m "enter the commit test"
6.git push
- vs code is working.
    - good evening

- Day 1 question answer?

- What is public ?
    - public is a java keyword which declares a member's access as public.
    - public members are visible to all other classes..
- Why don't we use 'private' in class main ?
    -JVM won't be able to call that main method so the code wont be executed to avoid this it will give
     you compile time error.
- How many different  ways to operate concantination ?
    - Concatenation operators join multiple strings into a single string. 
    - There are two concatenation operators, + and & . 
- Explain "public static void main".
    - Public:- it is an access specifier that means it will be accessed by publically.
    - Static:- it is access modifier that means when the java program is load then it will create the
     space in memory automatically.
    - Void:- it is a return type that is it does not return any value.
    -  main():- it is a method or a function name.
- Explain "System.out.println"
    - System: It is a final class defined in the java.lang package.
    - out: This is an instance of PrintStream type, which is a public and static member field of the System
     class.
    - println(): As all instances of PrintStream class have a public method println(). It prints any argument
     passed to it and adds a new line to the output.

- Day 2 question answer ?

- - Why Java became very poppular?
    - Some features that makes Java so useful and popular..
        - Easy to Use
            Java's syntax is similar to C & C++. The ideal language for beginning Java students who can
             master the language in two stages. It starts with Core Java and then moves on to Advanced Java.
        - Built in Security
            Java programming language uses for creating software applications, Web applications, Android
             applications, and software tools.
        - Open Source
            It is open-source, which implies that it is free to use. Any developer with a working knowledge
             of Java can use this free platform to create apps.
        - Strong Community
            It's a largest stack flow community. If there is any compillation error in the programming,
             then other programmers can assist us and solve that problem.
        - Excellent Documentation
            Its extensive documentation is well defined that provides complete guide to help and solve
             any problems we may encounter when coding in Java.
- Why Java 8 is still popular?
    - It's an LTS (Long Term Support) version, where as not all vversions of Java are LTS versions.
     This LTS version was introduced only in Java 8 (2014).
- Features or Advantages of Java 8.
    - Lambda expressions,
    - Method references,
    - Functional interfaces,
    - Stream API,
    - Default methods,
    - Base64 Encode Decode,
    - Static methods in interface,
    - Optional class,
    - Collectors class,
    - ForEach() method,
    - Nashorn JavaScript Engine,
    - Parallel Array Sorting,
    - Type and Repating Annotations,
    - IO Enhancements,
    - Concurrency Enhancements,
    - JDBC Enhancements etc.

- Day 3 question answer ?

- Class
    Class is an user defined BluePrint from which objects are created.
-Object
    It is the result of a class.
        -How many ways to create an object?
            There are five different ways to create an object in Java:
                - Java new Operator
                - Java Class.newInstance() method
                - Java newInstance() method of constructor
                - Java Object.clone() method
                - Java Object Serialization and Deserialization
- Functional Programming
    - It's an OOP concept. There are 2 methods used in functional programming.
        - Using Objects Method
        - Using Static Method
- To create an Object
        B b = new B
    - 'B' is an Object.   - 'b' is a reference of the object.
- OOPs features
    - Inheritance
        A & B are two classes, are independent to each other. B is the child class of A. Then we have
         to inherit them using 2 methods.
        - using extends keyword
        - using implements keyword
            - How to know where we can use extends keyword or implements keyword?
                When a class can inherit another class, then we use extends keyword. And when a class
                 can implement an interface, then we use implements keyword.
    - Polymorphism
        If one task is performed in different ways, it is known as polymorphism. There are 2 methods.
        - Overloading (Compile time Polymorphism)
        - Overriding (Run time Polymorphism)
    - Abstraction
        To hide something. There are 2 ways
        - Abstract Class
        - Interface
            - Difference between class, abstract class, interface..
                Class
                - Class is a blueprint or template from which objects are created.
                Abstract Class
                - Abstract class can have abstract and non-abstract methods.
                Interface
                - Interface can have only abstract methods.
    - Encapsulation
        To bind the behaviour and properties.
- How many different keywords available in java?
    There are 51 keywords available in Java.
    - Access modifiers − private, protected, public.
    - Class, method, variable modifiers− abstract, class, extends, final, implements, interface, native,
     new, static, strictfp, synchronized, transient, volatile.
    - Flow control− break, case, continue, default, do, else, for, if, instanceof, return, switch, while.
    - Package control− import, package.
    - Primitive types− boolean, byte, char, double, float, int, long, short.
    - Error handling− assert, catch, finally, throw, throws, try.
    - Enumeration− enum.
    - Others− super, this, void.
    - Unused− const, goto.

- DAy 4 question answer ?

- Access Specifier
    The access modifiers in Java specifies the accessibility or scope of a class.
    There are 4 types of access specifier in Java.
    - Public
    - Private
    - Default
    - Protected
- MAVEN
    It's a powerful Project Management Tool. It is used for projects build, dependency and documentation.
- Monolithic
    The monolithic operating system is a very basic operating system in which file management, memory
     management, device management, and process management are directly controlled within the kernel.
      The kernel can access all the resources present in the system.
- Microservice
    Microservices are the small services that work together. It's a Service Oriented Architecture.
     By combining all the microservices, it constructs a big service. In the microservice architecture,
      all the services communicate with each other.
- Spring Boot
    It is used to create a stand-alone Spring-based application. Spring Boot is the combination of Spring
     Framework and Embedded Servers.
     
- Day 5 question answer ?

- Data types
    - 2types: 
        - 1.primitive: byte,short,int,long,float,double,char,boolean
        - 2.non primitive: string,array,etc
    - byte-1byte
        - Its minimum value is -128 and maximum value is 127.
    - short-2byte
        - Its minimum value is -32,768 and maximum value is 32,767. 
    - int-4byte
        - Its minimum value is - 2,147,483,648and maximum value is 2,147,483,647.
    - long-8byte
        -  Its minimum value is - 9,223,372,036,854,775,808and maximum value is 9,223,372,036,854,775,807. 
    - float-4byte
    - double-8byte
    - char-2byte
    - double-1bit

- Advantages of microservices over monolithic
    - Advantages of monolithic
    - Simple to develop relative to microservices, where skilled developers are required in order to identify  and develop the services.
    - Easier to deploy as only a single jar/war file is deployed.
    - Relatively easier and simple to develop in comparison to microservices architecture.
    - The problems of network latency and security are relatively less in comparison to microservices architecture.
    - Developers need not learn different applications, they can keep their focus on one application.

    - Advantages of microservices
    - It is easy to manage as it is relatively smaller.
    - If there’s any update in one of the microservices, then we need to redeploy only that microservice.
    - Microservices are self-contained and, hence, deployed independently. Their start-up and deployment times are relatively less.
    - It is very easy for a new developer to onboard the project as he needs to understand only a particular microservice providing the functionality he will be working on and not the whole system.
    - If a particular microservice is facing a large load because of the users using that functionality in excess, then we need to scale out that microservice only. Hence, the microservices architecture supports horizontal scaling.
    - Each microservice can use different technology based on the business requirements.
    - If a particular microservice goes down due to some bug, then it doesn’t affect other microservices and the whole system remains intact and continues providing other functionalities to the users.

- Day 6 all question answer ?

- Memory area location
    It's of 5 types.
    - Heap Space
        Java Heap space is used by java runtime to allocate memory to Objects and JRE classes. (object)
    - Static
        It's happens only once in the class area when the class is loaded in the memory. (class)
    - Stack
        It is used for static memory allocation and the execution of a thread. (method)
    - Register
        It contains the address of the JVM instructions currently being executed. (execute)
    - Native Area
        It is a stack for native code written in a language other than Java.

- Naming Convention
    Java naming convention is a rule to follow as you decide what to name your identifiers such as class, package, variable, constant, method, etc. But, it is not forced to follow. So, it is known as convention not rule.

- Keywords
    There are 51 keywords present in java.
    assert:-For debugging
    boolean:-A data type that can only store true and false values
    break:-Breaks out of a loop or a switch block
    byte:-A data type that can store whole numbers from -128 and 127
    case:-Marks a block of code in switch statements
    catch:-Catches exceptions generated by try statements
    char:-A data type that is used to store a single character
    class:-Defines a class
    continue:-Continues to the next iteration of a loop
    const:-Defines a constant. Not in use - use final instead
    default:-Specifies the default block of code in a switch statement
    do:-Used together with while to create a do-while loop
    double:-A data type that can store whole numbers from 1.7e−308 to 1.7e+308
    else:-Used in conditional statements
    enum:-Declares an enumerated (unchangeable) type
    exports:-Exports a package with a module. New in Java 9
    extends:-Extends a class (indicates that a class is inherited from another class)
    final:-A non-access modifier used for classes, attributes and methods, which makes them non-changeable (impossible to inherit or override)
    finally:-Used with exceptions, a block of code that will be executed no matter if there is an exception or not
    float:-A data type that can store whole numbers from 3.4e−038 to 3.4e+038
    for:-Create a for loop
    goto:-Not in use, and has no function
    if:-Makes a conditional statement
    implements:-Implements an interface
    import:-Used to import a package, class or interface
    instanceof:-Checks whether an object is an instance of a specific class or an interface
    int:-A data type that can store whole numbers from -2147483648 to 2147483647
    interface:-Used to declare a special type of class that only contains abstract methods
    long:-A data type that can store whole numbers from -9223372036854775808 to 9223372036854775808
    module:-Declares a module. New in Java 9
    native:-Specifies that a method is not implemented in the same Java source file (but in another language)
    new:-Creates new objects
    package:-Declares a package
    private:-An access modifier used for attributes, methods and constructors, making them only accessible within the declared class
    protected:-An access modifier used for attributes, methods and constructors, making them accessible in the same package and subclasses
    public:-An access modifier used for classes, attributes, methods and constructors, making them accessible by any other class
    requires:-Specifies required libraries inside a module. New in Java 9
    return:-Finished the execution of a method, and can be used to return a value from a method
    short:-A data type that can store whole numbers from -32768 to 32767
    static:-A non-access modifier used for methods and attributes. Static methods/attributes can be accessed without creating an object of a class
    strictfp:-Restrict the precision and rounding of floating point calculations
    super:-Refers to superclass (parent) objects
    switch:-Selects one of many code blocks to be executed
    synchronized:-A non-access modifier, which specifies that methods can only be accessed by one thread at a time
    this:-Refers to the current object in a method or constructor
    throw:-Creates a custom error
    throws:-Indicates what exceptions may be thrown by a method
    transient:-A non-accesss modifier, which specifies that an attribute is not part of an object's persistent state
    try:-Creates a try...catch statement
    var:-Declares a variable. New in Java 10
    void:-Specifies that a method should not have a return value
    volatile:-Indicates that an attribute is not cached thread-locally, and is always read from the "main memory"
    while:-Creates a while 

- Access Specifier
    In Java, access specifiers are used to specify the access level of a class. There are four access specifiers in Java:
    - public: When we declare class members as public, they are accessible from outside the class.
    - private: When we declare class members as private, they are only accessible within the class and are not accessible from outside the class.
    - default: When we declare class members with no access specifier is considered as default, they are only accessible within the package and are not accessible from outside the package.
    - protected: When we declare class members as protected, they are only accessible by any class within the same package or by any subclasses of the parent class in which the class members are declared as protected, regardless of whether the subclass is in the same package or a different package.
        - ex:
        class MyClass {
             void myMethod() {
                System.out.println("This is my method.");
             }
        }

- Operators 
     It is a symbol that is used to perform operations. For example: +, -, *, / etc.
     Unary Operator
     Arithmetic Operator,
     Shift Operator,
     Relational Operator,
     Bitwise Operator,
     Logical Operator,
     Ternary Operator and
     Assignment Operator.

- different type of stereotypes and its services in java ?
    - Spring Annotations are a form of metadata that provides data about a program. Annotations are used to provide supplemental information about a program. It does not have a direct effect on the operation of the code they annotate. It does not change the action of the compiled program.

    - Stereotype Annotations its type:1.@Service,  2.@Repository, 3.@Controller
    - 1: @Service: We specify a class with @Service to indicate that they’re holding the business logic. Besides being used in the service layer, there isn’t any other special use for this annotation. The utility classes can be marked as Service classes.

    - 2: @Repository: We specify a class with @Repository to indicate that they’re dealing with CRUD operations, usually, it’s used with DAO (Data Access Object) or Repository implementations that deal with database tables.

    - 3: @Controller: We specify a class with @Controller to indicate that they’re front controllers and responsible to handle user requests and return the appropriate response. It is mostly used with REST Web Services.                                  

- SpringBootApplication meaning
    Spring Boot is an open-source, microservice-based Java web framework offered by Spring, particularly useful for software engineers developing web apps and microservices.