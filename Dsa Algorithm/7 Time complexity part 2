- Time complexity part 2
    for(i=0; i<n; i++)-----o(n)
    for(i=o; i<n; i=i+2)-----n/2=o(n)
    for(i=n; i>1; i--)-------o(n)
    for(i=1; i<n; i=i*2)------o(log2n)
    for(i=1; i<n; i=i*3)-----o(log3n)
    for(i=n; i<1; i=i/2)-----o(log2n)


- Ex-1
    for(i=1; i<n; i=i*2)
    {
        stmt;
    }
    Assume i>=n
    i=2k                    i
    2k>n                ---------
    2k=n                    1
    k=logn2             1*2=2
    o(log2n)            2*2=2²
                        2²*2=2³
                        .
                        .
                        2k

   - for(i=1; i<=n;i++)
    {
        stmt;
    }
    i=1+1+1+1+....+1=n
    k=0

- Ex-2
   - for(i=1; i<n; i=i*2)
    {
        stmt;
    }
    i=1*2*2*2*...=n
    2k=n
    k=log2n

- Ex-3
    - for(i=n; i>=1; i=i/2)
    {
        stmt;
    }
    Assume i<1
    n/2k<1
    n/2k=1
    n=2k
    k=log2n
    o(log2n)=Time complexity

- Ex-4
    - for(i=0; i*i<n; i++)
    {
        stmt;
    }
    i*i<n
    i*i>=n
    i²=n
    i√n

- Ex-5
    - for(i=0; i<n; i++)
    {
        stmt;------------------ n
    }
    for(j=0; j<n; j++)
    {
        stmt;------------------ n
    }                      -----------
                                2n
                                o(n)-time complexity
    
- Ex-6
    - p=0
    for(i=1; i<n; i=i*2)
    {
        p++;----------------logn
    }
    for(j=1; j<p; j=j*2)
    {
        stmt;---------------logp
    }               -----------------
                        o(log logn)

- Ex-7
    for(i=0; i<n; i++)---------------n
    {
        for(j=1; j<n; j=j*2)-------n*logn
        {
            stmt;-------------------n*logn
        }                       --------------
    }                             2nlogn+n
                                    o(nlogn)